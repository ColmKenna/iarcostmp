/*
	ArcosOrderLineBO.h
	The implementation of properties and methods for the ArcosOrderLineBO object.
	Generated by SudzC.com
*/
#import "ArcosOrderLineBO.h"

@implementation ArcosOrderLineBO
	@synthesize IUR = _IUR;
	@synthesize OrderNumber = _OrderNumber;
	@synthesize OrderLine = _OrderLine;
	@synthesize OrderHeaderIUR = _OrderHeaderIUR;
	@synthesize LocationIUR = _LocationIUR;
	@synthesize OrderDate = _OrderDate;
	@synthesize ProductIUR = _ProductIUR;
	@synthesize ProductCode = _ProductCode;
	@synthesize Qty = _Qty;
	@synthesize Bonus = _Bonus;
	@synthesize QtyReturned = _QtyReturned;
	@synthesize RRIUR = _RRIUR;
	@synthesize InStock = _InStock;
	@synthesize Testers = _Testers;
	@synthesize Comments = _Comments;
	@synthesize LineValue = _LineValue;
	@synthesize UnitPrice = _UnitPrice;
	@synthesize CostPrice = _CostPrice;
	@synthesize InvoiceRef = _InvoiceRef;
	@synthesize InvoiceLineNumber = _InvoiceLineNumber;
	@synthesize FOC = _FOC;
	@synthesize BatchRef = _BatchRef;
	@synthesize CallCost = _CallCost;
	@synthesize SageComments1 = _SageComments1;
	@synthesize SageComments2 = _SageComments2;
	@synthesize DiscountPercent = _DiscountPercent;
	@synthesize RebatePercent = _RebatePercent;
	@synthesize Points = _Points;
	@synthesize NetRevenue = _NetRevenue;
	@synthesize DeliveryDate = _DeliveryDate;
	@synthesize TradeValue = _TradeValue;
	@synthesize VatAmount = _VatAmount;

	- (id) init
	{
		if(self = [super init])
		{
			self.OrderDate = nil;
			self.ProductCode = nil;
			self.Comments = nil;
			self.LineValue = nil;
			self.UnitPrice = nil;
			self.CostPrice = nil;
			self.InvoiceRef = nil;
			self.BatchRef = nil;
			self.CallCost = nil;
			self.SageComments1 = nil;
			self.SageComments2 = nil;
			self.DiscountPercent = nil;
			self.RebatePercent = nil;
			self.NetRevenue = nil;
			self.DeliveryDate = nil;
			self.TradeValue = nil;
			self.VatAmount = nil;

		}
		return self;
	}

	+ (ArcosOrderLineBO*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.IUR = [[Soap getNodeValue: node withName: @"IUR"] intValue];
			self.OrderNumber = [[Soap getNodeValue: node withName: @"OrderNumber"] intValue];
			self.OrderLine = [[Soap getNodeValue: node withName: @"OrderLine"] intValue];
			self.OrderHeaderIUR = [[Soap getNodeValue: node withName: @"OrderHeaderIUR"] intValue];
			self.LocationIUR = [[Soap getNodeValue: node withName: @"LocationIUR"] intValue];
			self.OrderDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"OrderDate"]];
			self.ProductIUR = [[Soap getNodeValue: node withName: @"ProductIUR"] intValue];
			self.ProductCode = [Soap getNodeValue: node withName: @"ProductCode"];
			self.Qty = [[Soap getNodeValue: node withName: @"Qty"] intValue];
			self.Bonus = [[Soap getNodeValue: node withName: @"Bonus"] intValue];
			self.QtyReturned = [[Soap getNodeValue: node withName: @"QtyReturned"] intValue];
			self.RRIUR = [[Soap getNodeValue: node withName: @"RRIUR"] intValue];
			self.InStock = [[Soap getNodeValue: node withName: @"InStock"] intValue];
			self.Testers = [[Soap getNodeValue: node withName: @"Testers"] intValue];
			self.Comments = [Soap getNodeValue: node withName: @"Comments"];
			self.LineValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"LineValue"]];
			self.UnitPrice = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"UnitPrice"]];
			self.CostPrice = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"CostPrice"]];
			self.InvoiceRef = [Soap getNodeValue: node withName: @"InvoiceRef"];
			self.InvoiceLineNumber = [[Soap getNodeValue: node withName: @"InvoiceLineNumber"] intValue];
			self.FOC = [[Soap getNodeValue: node withName: @"FOC"] intValue];
			self.BatchRef = [Soap getNodeValue: node withName: @"BatchRef"];
			self.CallCost = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"CallCost"]];
			self.SageComments1 = [Soap getNodeValue: node withName: @"SageComments1"];
			self.SageComments2 = [Soap getNodeValue: node withName: @"SageComments2"];
			self.DiscountPercent = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"DiscountPercent"]];
			self.RebatePercent = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"RebatePercent"]];
			self.Points = [[Soap getNodeValue: node withName: @"Points"] intValue];
			self.NetRevenue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"NetRevenue"]];
			self.DeliveryDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"DeliveryDate"]];
			self.TradeValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"TradeValue"]];
			self.VatAmount = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"VatAmount"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"OrderLineBO"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<IUR>%@</IUR>", [NSString stringWithFormat: @"%i", self.IUR]];
		[s appendFormat: @"<OrderNumber>%@</OrderNumber>", [NSString stringWithFormat: @"%i", self.OrderNumber]];
		[s appendFormat: @"<OrderLine>%@</OrderLine>", [NSString stringWithFormat: @"%i", self.OrderLine]];
		[s appendFormat: @"<OrderHeaderIUR>%@</OrderHeaderIUR>", [NSString stringWithFormat: @"%i", self.OrderHeaderIUR]];
		[s appendFormat: @"<LocationIUR>%@</LocationIUR>", [NSString stringWithFormat: @"%i", self.LocationIUR]];
		if (self.OrderDate != nil) [s appendFormat: @"<OrderDate>%@</OrderDate>", [Soap getDateString: self.OrderDate]];
		[s appendFormat: @"<ProductIUR>%@</ProductIUR>", [NSString stringWithFormat: @"%i", self.ProductIUR]];
		if (self.ProductCode != nil) [s appendFormat: @"<ProductCode>%@</ProductCode>", [[self.ProductCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Qty>%@</Qty>", [NSString stringWithFormat: @"%i", self.Qty]];
		[s appendFormat: @"<Bonus>%@</Bonus>", [NSString stringWithFormat: @"%i", self.Bonus]];
		[s appendFormat: @"<QtyReturned>%@</QtyReturned>", [NSString stringWithFormat: @"%i", self.QtyReturned]];
		[s appendFormat: @"<RRIUR>%@</RRIUR>", [NSString stringWithFormat: @"%i", self.RRIUR]];
		[s appendFormat: @"<InStock>%@</InStock>", [NSString stringWithFormat: @"%i", self.InStock]];
		[s appendFormat: @"<Testers>%@</Testers>", [NSString stringWithFormat: @"%i", self.Testers]];
		if (self.Comments != nil) [s appendFormat: @"<Comments>%@</Comments>", [[self.Comments stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.LineValue != nil) [s appendFormat: @"<LineValue>%@</LineValue>", [NSString stringWithFormat: @"%@", self.LineValue]];
		if (self.UnitPrice != nil) [s appendFormat: @"<UnitPrice>%@</UnitPrice>", [NSString stringWithFormat: @"%@", self.UnitPrice]];
		if (self.CostPrice != nil) [s appendFormat: @"<CostPrice>%@</CostPrice>", [NSString stringWithFormat: @"%@", self.CostPrice]];
		if (self.InvoiceRef != nil) [s appendFormat: @"<InvoiceRef>%@</InvoiceRef>", [[self.InvoiceRef stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<InvoiceLineNumber>%@</InvoiceLineNumber>", [NSString stringWithFormat: @"%i", self.InvoiceLineNumber]];
		[s appendFormat: @"<FOC>%@</FOC>", [NSString stringWithFormat: @"%i", self.FOC]];
		if (self.BatchRef != nil) [s appendFormat: @"<BatchRef>%@</BatchRef>", [[self.BatchRef stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CallCost != nil) [s appendFormat: @"<CallCost>%@</CallCost>", [NSString stringWithFormat: @"%@", self.CallCost]];
		if (self.SageComments1 != nil) [s appendFormat: @"<SageComments1>%@</SageComments1>", [[self.SageComments1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SageComments2 != nil) [s appendFormat: @"<SageComments2>%@</SageComments2>", [[self.SageComments2 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DiscountPercent != nil) [s appendFormat: @"<DiscountPercent>%@</DiscountPercent>", [NSString stringWithFormat: @"%@", self.DiscountPercent]];
		if (self.RebatePercent != nil) [s appendFormat: @"<RebatePercent>%@</RebatePercent>", [NSString stringWithFormat: @"%@", self.RebatePercent]];
		[s appendFormat: @"<Points>%@</Points>", [NSString stringWithFormat: @"%i", self.Points]];
		if (self.NetRevenue != nil) [s appendFormat: @"<NetRevenue>%@</NetRevenue>", [NSString stringWithFormat: @"%@", self.NetRevenue]];
		if (self.DeliveryDate != nil) [s appendFormat: @"<DeliveryDate>%@</DeliveryDate>", [Soap getDateString: self.DeliveryDate]];
		if (self.TradeValue != nil) [s appendFormat: @"<TradeValue>%@</TradeValue>", [NSString stringWithFormat: @"%@", self.TradeValue]];
		if (self.VatAmount != nil) [s appendFormat: @"<VatAmount>%@</VatAmount>", [NSString stringWithFormat: @"%@", self.VatAmount]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosOrderLineBO class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.OrderDate = nil;
		self.ProductCode = nil;
		self.Comments = nil;
		self.LineValue = nil;
		self.UnitPrice = nil;
		self.CostPrice = nil;
		self.InvoiceRef = nil;
		self.BatchRef = nil;
		self.CallCost = nil;
		self.SageComments1 = nil;
		self.SageComments2 = nil;
		self.DiscountPercent = nil;
		self.RebatePercent = nil;
		self.NetRevenue = nil;
		self.DeliveryDate = nil;
		self.TradeValue = nil;
		self.VatAmount = nil;
		[super dealloc];
	}

@end
