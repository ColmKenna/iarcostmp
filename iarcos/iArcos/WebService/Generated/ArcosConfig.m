/*
	ArcosConfig.h
	The implementation of properties and methods for the ArcosConfig object.
	Generated by SudzC.com
*/
#import "ArcosConfig.h"

@implementation ArcosConfig
	@synthesize ApplyEmployeeRestrictions = _ApplyEmployeeRestrictions;
	@synthesize AskWholesaler = _AskWholesaler;
	@synthesize ClientHomePage = _ClientHomePage;
	@synthesize CompanyLocationIUR = _CompanyLocationIUR;
	@synthesize DefaultCTiur = _DefaultCTiur;
	@synthesize DefaultCUiur = _DefaultCUiur;
	@synthesize DefaultDataSource = _DefaultDataSource;
	@synthesize DefaultFormIUR = _DefaultFormIUR;
	@synthesize DefaultLTiur = _DefaultLTiur;
	@synthesize DefaultNoOfPeriods = _DefaultNoOfPeriods;
	@synthesize DefaultSTiur = _DefaultSTiur;
	@synthesize DefaultTargetType = _DefaultTargetType;
	@synthesize DefaultWholesalerIUR = _DefaultWholesalerIUR;
	@synthesize IUR = _IUR;
	@synthesize MinimumOrderValue = _MinimumOrderValue;
	@synthesize StrataHomePage = _StrataHomePage;
	@synthesize RecordLeads = _RecordLeads;
	@synthesize CashCollection = _CashCollection;
	@synthesize DayOfWeekEnd = _DayOfWeekEnd;
	@synthesize SMSTexting = _SMSTexting;
	@synthesize Emailing = _Emailing;
	@synthesize PrintHeaderPage = _PrintHeaderPage;
	@synthesize PrintFooterPage = _PrintFooterPage;
	@synthesize PrintOrder = _PrintOrder;
	@synthesize BonusBlockedAt = _BonusBlockedAt;
	@synthesize SYStoHQ = _SYStoHQ;
	@synthesize HQtoRep = _HQtoRep;
	@synthesize ReptoHQ = _ReptoHQ;
	@synthesize HQtoSYS = _HQtoSYS;
	@synthesize StandardLocationCode = _StandardLocationCode;
	@synthesize StandardProductCode = _StandardProductCode;
	@synthesize UpdateOutlook = _UpdateOutlook;
	@synthesize ForceSurvey = _ForceSurvey;
	@synthesize ForceAppointment = _ForceAppointment;
	@synthesize ConfirmStockDelivery = _ConfirmStockDelivery;
	@synthesize InvoiceDataAvailable = _InvoiceDataAvailable;
	@synthesize RecordDistribution = _RecordDistribution;
	@synthesize UseTesters = _UseTesters;
	@synthesize UseFOC = _UseFOC;
	@synthesize UseBonus = _UseBonus;
	@synthesize UseVAT = _UseVAT;
	@synthesize ForceOrderType = _ForceOrderType;
	@synthesize ForceWholesaler = _ForceWholesaler;
	@synthesize sageformiur = _sageformiur;
	@synthesize sageinuse = _sageinuse;
	@synthesize showproductcode = _showproductcode;
	@synthesize showremarks = _showremarks;
	@synthesize allowstatuschange = _allowstatuschange;
	@synthesize SeparateBonusLines = _SeparateBonusLines;
	@synthesize DefaultDateType = _DefaultDateType;
	@synthesize DefaultProductLevel = _DefaultProductLevel;
	@synthesize PasswordExpireDays = _PasswordExpireDays;
	@synthesize DefaultCustomerView = _DefaultCustomerView;
	@synthesize MergeBranchAccounts = _MergeBranchAccounts;
	@synthesize AllLYytdTYytdTY = _AllLYytdTYytdTY;
	@synthesize BlockOrderPad = _BlockOrderPad;
	@synthesize OverHeads = _OverHeads;
	@synthesize UseInStock = _UseInStock;
	@synthesize ShowLocationCode = _ShowLocationCode;
	@synthesize LinkProductGroups = _LinkProductGroups;
	@synthesize HasBackOrders = _HasBackOrders;
	@synthesize UseCustomerPricing = _UseCustomerPricing;
	@synthesize ShowCatalogCode = _ShowCatalogCode;
	@synthesize F3Template = _F3Template;
	@synthesize UseCompanyDiscount = _UseCompanyDiscount;
	@synthesize ApplyBonusStructure = _ApplyBonusStructure;
	@synthesize MoveHistoricData = _MoveHistoricData;
	@synthesize UseLastEmployeeForm = _UseLastEmployeeForm;
	@synthesize MaintainWholesalerCodes = _MaintainWholesalerCodes;
	@synthesize ShowF6inOrderEntry = _ShowF6inOrderEntry;
	@synthesize OrderPadFromDiary = _OrderPadFromDiary;
	@synthesize NetSalesFormula = _NetSalesFormula;
	@synthesize TargetVolumeIncludesBonus = _TargetVolumeIncludesBonus;
	@synthesize TargetEstimatesInUse = _TargetEstimatesInUse;
	@synthesize TargetOnDeliveryDates = _TargetOnDeliveryDates;
	@synthesize PointSystemInUse = _PointSystemInUse;
	@synthesize WebEnabled = _WebEnabled;
	@synthesize BlockBonusOnly = _BlockBonusOnly;
	@synthesize WeekendDay = _WeekendDay;
	@synthesize SummaryDataAvailable = _SummaryDataAvailable;
	@synthesize AllowSplitPacks = _AllowSplitPacks;
	@synthesize SplitDeliveryDates = _SplitDeliveryDates;
	@synthesize UseNetRevenue = _UseNetRevenue;

	- (id) init
	{
		if(self = [super init])
		{
			self.ClientHomePage = nil;
			self.DefaultDataSource = nil;
			self.DefaultTargetType = nil;
			self.MinimumOrderValue = nil;
			self.StrataHomePage = nil;
			self.StandardLocationCode = nil;
			self.StandardProductCode = nil;
			self.DefaultCustomerView = nil;
			self.F3Template = nil;

		}
		return self;
	}

	+ (ArcosConfig*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.ApplyEmployeeRestrictions = [[Soap getNodeValue: node withName: @"ApplyEmployeeRestrictions"] boolValue];
			self.AskWholesaler = [[Soap getNodeValue: node withName: @"AskWholesaler"] boolValue];
			self.ClientHomePage = [Soap getNodeValue: node withName: @"ClientHomePage"];
			self.CompanyLocationIUR = [[Soap getNodeValue: node withName: @"CompanyLocationIUR"] intValue];
			self.DefaultCTiur = [[Soap getNodeValue: node withName: @"DefaultCTiur"] intValue];
			self.DefaultCUiur = [[Soap getNodeValue: node withName: @"DefaultCUiur"] intValue];
			self.DefaultDataSource = [Soap getNodeValue: node withName: @"DefaultDataSource"];
			self.DefaultFormIUR = [[Soap getNodeValue: node withName: @"DefaultFormIUR"] intValue];
			self.DefaultLTiur = [[Soap getNodeValue: node withName: @"DefaultLTiur"] intValue];
			self.DefaultNoOfPeriods = [[Soap getNodeValue: node withName: @"DefaultNoOfPeriods"] intValue];
			self.DefaultSTiur = [[Soap getNodeValue: node withName: @"DefaultSTiur"] intValue];
			self.DefaultTargetType = [Soap getNodeValue: node withName: @"DefaultTargetType"];
			self.DefaultWholesalerIUR = [[Soap getNodeValue: node withName: @"DefaultWholesalerIUR"] intValue];
			self.IUR = [[Soap getNodeValue: node withName: @"IUR"] intValue];
			self.MinimumOrderValue = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"MinimumOrderValue"]];
			self.StrataHomePage = [Soap getNodeValue: node withName: @"StrataHomePage"];
			self.RecordLeads = [[Soap getNodeValue: node withName: @"RecordLeads"] boolValue];
			self.CashCollection = [[Soap getNodeValue: node withName: @"CashCollection"] boolValue];
			self.DayOfWeekEnd = [[Soap getNodeValue: node withName: @"DayOfWeekEnd"] intValue];
			self.SMSTexting = [[Soap getNodeValue: node withName: @"SMSTexting"] intValue];
			self.Emailing = [[Soap getNodeValue: node withName: @"Emailing"] intValue];
			self.PrintHeaderPage = [[Soap getNodeValue: node withName: @"PrintHeaderPage"] boolValue];
			self.PrintFooterPage = [[Soap getNodeValue: node withName: @"PrintFooterPage"] boolValue];
			self.PrintOrder = [[Soap getNodeValue: node withName: @"PrintOrder"] boolValue];
			self.BonusBlockedAt = [[Soap getNodeValue: node withName: @"BonusBlockedAt"] intValue];
			self.SYStoHQ = [[Soap getNodeValue: node withName: @"SYStoHQ"] intValue];
			self.HQtoRep = [[Soap getNodeValue: node withName: @"HQtoRep"] intValue];
			self.ReptoHQ = [[Soap getNodeValue: node withName: @"ReptoHQ"] intValue];
			self.HQtoSYS = [[Soap getNodeValue: node withName: @"HQtoSYS"] intValue];
			self.StandardLocationCode = [Soap getNodeValue: node withName: @"StandardLocationCode"];
			self.StandardProductCode = [Soap getNodeValue: node withName: @"StandardProductCode"];
			self.UpdateOutlook = [[Soap getNodeValue: node withName: @"UpdateOutlook"] boolValue];
			self.ForceSurvey = [[Soap getNodeValue: node withName: @"ForceSurvey"] boolValue];
			self.ForceAppointment = [[Soap getNodeValue: node withName: @"ForceAppointment"] boolValue];
			self.ConfirmStockDelivery = [[Soap getNodeValue: node withName: @"ConfirmStockDelivery"] boolValue];
			self.InvoiceDataAvailable = [[Soap getNodeValue: node withName: @"InvoiceDataAvailable"] boolValue];
			self.RecordDistribution = [[Soap getNodeValue: node withName: @"RecordDistribution"] boolValue];
			self.UseTesters = [[Soap getNodeValue: node withName: @"UseTesters"] boolValue];
			self.UseFOC = [[Soap getNodeValue: node withName: @"UseFOC"] boolValue];
			self.UseBonus = [[Soap getNodeValue: node withName: @"UseBonus"] boolValue];
			self.UseVAT = [[Soap getNodeValue: node withName: @"UseVAT"] boolValue];
			self.ForceOrderType = [[Soap getNodeValue: node withName: @"ForceOrderType"] boolValue];
			self.ForceWholesaler = [[Soap getNodeValue: node withName: @"ForceWholesaler"] boolValue];
			self.sageformiur = [[Soap getNodeValue: node withName: @"sageformiur"] intValue];
			self.sageinuse = [[Soap getNodeValue: node withName: @"sageinuse"] boolValue];
			self.showproductcode = [[Soap getNodeValue: node withName: @"showproductcode"] boolValue];
			self.showremarks = [[Soap getNodeValue: node withName: @"showremarks"] boolValue];
			self.allowstatuschange = [[Soap getNodeValue: node withName: @"allowstatuschange"] boolValue];
			self.SeparateBonusLines = [[Soap getNodeValue: node withName: @"SeparateBonusLines"] boolValue];
			self.DefaultDateType = [[Soap getNodeValue: node withName: @"DefaultDateType"] intValue];
			self.DefaultProductLevel = [[Soap getNodeValue: node withName: @"DefaultProductLevel"] intValue];
			self.PasswordExpireDays = [[Soap getNodeValue: node withName: @"PasswordExpireDays"] intValue];
			self.DefaultCustomerView = [Soap getNodeValue: node withName: @"DefaultCustomerView"];
			self.MergeBranchAccounts = [[Soap getNodeValue: node withName: @"MergeBranchAccounts"] boolValue];
			self.AllLYytdTYytdTY = [[Soap getNodeValue: node withName: @"AllLYytdTYytdTY"] boolValue];
			self.BlockOrderPad = [[Soap getNodeValue: node withName: @"BlockOrderPad"] boolValue];
			self.OverHeads = [[Soap getNodeValue: node withName: @"OverHeads"] boolValue];
			self.UseInStock = [[Soap getNodeValue: node withName: @"UseInStock"] boolValue];
			self.ShowLocationCode = [[Soap getNodeValue: node withName: @"ShowLocationCode"] boolValue];
			self.LinkProductGroups = [[Soap getNodeValue: node withName: @"LinkProductGroups"] boolValue];
			self.HasBackOrders = [[Soap getNodeValue: node withName: @"HasBackOrders"] boolValue];
			self.UseCustomerPricing = [[Soap getNodeValue: node withName: @"UseCustomerPricing"] boolValue];
			self.ShowCatalogCode = [[Soap getNodeValue: node withName: @"ShowCatalogCode"] boolValue];
			self.F3Template = [Soap getNodeValue: node withName: @"F3Template"];
			self.UseCompanyDiscount = [[Soap getNodeValue: node withName: @"UseCompanyDiscount"] boolValue];
			self.ApplyBonusStructure = [[Soap getNodeValue: node withName: @"ApplyBonusStructure"] boolValue];
			self.MoveHistoricData = [[Soap getNodeValue: node withName: @"MoveHistoricData"] boolValue];
			self.UseLastEmployeeForm = [[Soap getNodeValue: node withName: @"UseLastEmployeeForm"] boolValue];
			self.MaintainWholesalerCodes = [[Soap getNodeValue: node withName: @"MaintainWholesalerCodes"] boolValue];
			self.ShowF6inOrderEntry = [[Soap getNodeValue: node withName: @"ShowF6inOrderEntry"] boolValue];
			self.OrderPadFromDiary = [[Soap getNodeValue: node withName: @"OrderPadFromDiary"] boolValue];
			self.NetSalesFormula = [[Soap getNodeValue: node withName: @"NetSalesFormula"] intValue];
			self.TargetVolumeIncludesBonus = [[Soap getNodeValue: node withName: @"TargetVolumeIncludesBonus"] boolValue];
			self.TargetEstimatesInUse = [[Soap getNodeValue: node withName: @"TargetEstimatesInUse"] boolValue];
			self.TargetOnDeliveryDates = [[Soap getNodeValue: node withName: @"TargetOnDeliveryDates"] boolValue];
			self.PointSystemInUse = [[Soap getNodeValue: node withName: @"PointSystemInUse"] boolValue];
			self.WebEnabled = [[Soap getNodeValue: node withName: @"WebEnabled"] boolValue];
			self.BlockBonusOnly = [[Soap getNodeValue: node withName: @"BlockBonusOnly"] boolValue];
			self.WeekendDay = [[Soap getNodeValue: node withName: @"WeekendDay"] intValue];
			self.SummaryDataAvailable = [[Soap getNodeValue: node withName: @"SummaryDataAvailable"] boolValue];
			self.AllowSplitPacks = [[Soap getNodeValue: node withName: @"AllowSplitPacks"] boolValue];
			self.SplitDeliveryDates = [[Soap getNodeValue: node withName: @"SplitDeliveryDates"] boolValue];
			self.UseNetRevenue = [[Soap getNodeValue: node withName: @"UseNetRevenue"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Config"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<ApplyEmployeeRestrictions>%@</ApplyEmployeeRestrictions>", (self.ApplyEmployeeRestrictions)?@"true":@"false"];
		[s appendFormat: @"<AskWholesaler>%@</AskWholesaler>", (self.AskWholesaler)?@"true":@"false"];
		if (self.ClientHomePage != nil) [s appendFormat: @"<ClientHomePage>%@</ClientHomePage>", [[self.ClientHomePage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<CompanyLocationIUR>%@</CompanyLocationIUR>", [NSString stringWithFormat: @"%i", self.CompanyLocationIUR]];
		[s appendFormat: @"<DefaultCTiur>%@</DefaultCTiur>", [NSString stringWithFormat: @"%i", self.DefaultCTiur]];
		[s appendFormat: @"<DefaultCUiur>%@</DefaultCUiur>", [NSString stringWithFormat: @"%i", self.DefaultCUiur]];
		if (self.DefaultDataSource != nil) [s appendFormat: @"<DefaultDataSource>%@</DefaultDataSource>", [[self.DefaultDataSource stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DefaultFormIUR>%@</DefaultFormIUR>", [NSString stringWithFormat: @"%i", self.DefaultFormIUR]];
		[s appendFormat: @"<DefaultLTiur>%@</DefaultLTiur>", [NSString stringWithFormat: @"%i", self.DefaultLTiur]];
		[s appendFormat: @"<DefaultNoOfPeriods>%@</DefaultNoOfPeriods>", [NSString stringWithFormat: @"%i", self.DefaultNoOfPeriods]];
		[s appendFormat: @"<DefaultSTiur>%@</DefaultSTiur>", [NSString stringWithFormat: @"%i", self.DefaultSTiur]];
		if (self.DefaultTargetType != nil) [s appendFormat: @"<DefaultTargetType>%@</DefaultTargetType>", [[self.DefaultTargetType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DefaultWholesalerIUR>%@</DefaultWholesalerIUR>", [NSString stringWithFormat: @"%i", self.DefaultWholesalerIUR]];
		[s appendFormat: @"<IUR>%@</IUR>", [NSString stringWithFormat: @"%i", self.IUR]];
		if (self.MinimumOrderValue != nil) [s appendFormat: @"<MinimumOrderValue>%@</MinimumOrderValue>", [NSString stringWithFormat: @"%@", self.MinimumOrderValue]];
		if (self.StrataHomePage != nil) [s appendFormat: @"<StrataHomePage>%@</StrataHomePage>", [[self.StrataHomePage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<RecordLeads>%@</RecordLeads>", (self.RecordLeads)?@"true":@"false"];
		[s appendFormat: @"<CashCollection>%@</CashCollection>", (self.CashCollection)?@"true":@"false"];
		[s appendFormat: @"<DayOfWeekEnd>%@</DayOfWeekEnd>", [NSString stringWithFormat: @"%i", self.DayOfWeekEnd]];
		[s appendFormat: @"<SMSTexting>%@</SMSTexting>", [NSString stringWithFormat: @"%i", self.SMSTexting]];
		[s appendFormat: @"<Emailing>%@</Emailing>", [NSString stringWithFormat: @"%i", self.Emailing]];
		[s appendFormat: @"<PrintHeaderPage>%@</PrintHeaderPage>", (self.PrintHeaderPage)?@"true":@"false"];
		[s appendFormat: @"<PrintFooterPage>%@</PrintFooterPage>", (self.PrintFooterPage)?@"true":@"false"];
		[s appendFormat: @"<PrintOrder>%@</PrintOrder>", (self.PrintOrder)?@"true":@"false"];
		[s appendFormat: @"<BonusBlockedAt>%@</BonusBlockedAt>", [NSString stringWithFormat: @"%i", self.BonusBlockedAt]];
		[s appendFormat: @"<SYStoHQ>%@</SYStoHQ>", [NSString stringWithFormat: @"%i", self.SYStoHQ]];
		[s appendFormat: @"<HQtoRep>%@</HQtoRep>", [NSString stringWithFormat: @"%i", self.HQtoRep]];
		[s appendFormat: @"<ReptoHQ>%@</ReptoHQ>", [NSString stringWithFormat: @"%i", self.ReptoHQ]];
		[s appendFormat: @"<HQtoSYS>%@</HQtoSYS>", [NSString stringWithFormat: @"%i", self.HQtoSYS]];
		if (self.StandardLocationCode != nil) [s appendFormat: @"<StandardLocationCode>%@</StandardLocationCode>", [[self.StandardLocationCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.StandardProductCode != nil) [s appendFormat: @"<StandardProductCode>%@</StandardProductCode>", [[self.StandardProductCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<UpdateOutlook>%@</UpdateOutlook>", (self.UpdateOutlook)?@"true":@"false"];
		[s appendFormat: @"<ForceSurvey>%@</ForceSurvey>", (self.ForceSurvey)?@"true":@"false"];
		[s appendFormat: @"<ForceAppointment>%@</ForceAppointment>", (self.ForceAppointment)?@"true":@"false"];
		[s appendFormat: @"<ConfirmStockDelivery>%@</ConfirmStockDelivery>", (self.ConfirmStockDelivery)?@"true":@"false"];
		[s appendFormat: @"<InvoiceDataAvailable>%@</InvoiceDataAvailable>", (self.InvoiceDataAvailable)?@"true":@"false"];
		[s appendFormat: @"<RecordDistribution>%@</RecordDistribution>", (self.RecordDistribution)?@"true":@"false"];
		[s appendFormat: @"<UseTesters>%@</UseTesters>", (self.UseTesters)?@"true":@"false"];
		[s appendFormat: @"<UseFOC>%@</UseFOC>", (self.UseFOC)?@"true":@"false"];
		[s appendFormat: @"<UseBonus>%@</UseBonus>", (self.UseBonus)?@"true":@"false"];
		[s appendFormat: @"<UseVAT>%@</UseVAT>", (self.UseVAT)?@"true":@"false"];
		[s appendFormat: @"<ForceOrderType>%@</ForceOrderType>", (self.ForceOrderType)?@"true":@"false"];
		[s appendFormat: @"<ForceWholesaler>%@</ForceWholesaler>", (self.ForceWholesaler)?@"true":@"false"];
		[s appendFormat: @"<sageformiur>%@</sageformiur>", [NSString stringWithFormat: @"%i", self.sageformiur]];
		[s appendFormat: @"<sageinuse>%@</sageinuse>", (self.sageinuse)?@"true":@"false"];
		[s appendFormat: @"<showproductcode>%@</showproductcode>", (self.showproductcode)?@"true":@"false"];
		[s appendFormat: @"<showremarks>%@</showremarks>", (self.showremarks)?@"true":@"false"];
		[s appendFormat: @"<allowstatuschange>%@</allowstatuschange>", (self.allowstatuschange)?@"true":@"false"];
		[s appendFormat: @"<SeparateBonusLines>%@</SeparateBonusLines>", (self.SeparateBonusLines)?@"true":@"false"];
		[s appendFormat: @"<DefaultDateType>%@</DefaultDateType>", [NSString stringWithFormat: @"%i", self.DefaultDateType]];
		[s appendFormat: @"<DefaultProductLevel>%@</DefaultProductLevel>", [NSString stringWithFormat: @"%i", self.DefaultProductLevel]];
		[s appendFormat: @"<PasswordExpireDays>%@</PasswordExpireDays>", [NSString stringWithFormat: @"%i", self.PasswordExpireDays]];
		if (self.DefaultCustomerView != nil) [s appendFormat: @"<DefaultCustomerView>%@</DefaultCustomerView>", [[self.DefaultCustomerView stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<MergeBranchAccounts>%@</MergeBranchAccounts>", (self.MergeBranchAccounts)?@"true":@"false"];
		[s appendFormat: @"<AllLYytdTYytdTY>%@</AllLYytdTYytdTY>", (self.AllLYytdTYytdTY)?@"true":@"false"];
		[s appendFormat: @"<BlockOrderPad>%@</BlockOrderPad>", (self.BlockOrderPad)?@"true":@"false"];
		[s appendFormat: @"<OverHeads>%@</OverHeads>", (self.OverHeads)?@"true":@"false"];
		[s appendFormat: @"<UseInStock>%@</UseInStock>", (self.UseInStock)?@"true":@"false"];
		[s appendFormat: @"<ShowLocationCode>%@</ShowLocationCode>", (self.ShowLocationCode)?@"true":@"false"];
		[s appendFormat: @"<LinkProductGroups>%@</LinkProductGroups>", (self.LinkProductGroups)?@"true":@"false"];
		[s appendFormat: @"<HasBackOrders>%@</HasBackOrders>", (self.HasBackOrders)?@"true":@"false"];
		[s appendFormat: @"<UseCustomerPricing>%@</UseCustomerPricing>", (self.UseCustomerPricing)?@"true":@"false"];
		[s appendFormat: @"<ShowCatalogCode>%@</ShowCatalogCode>", (self.ShowCatalogCode)?@"true":@"false"];
		if (self.F3Template != nil) [s appendFormat: @"<F3Template>%@</F3Template>", [[self.F3Template stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<UseCompanyDiscount>%@</UseCompanyDiscount>", (self.UseCompanyDiscount)?@"true":@"false"];
		[s appendFormat: @"<ApplyBonusStructure>%@</ApplyBonusStructure>", (self.ApplyBonusStructure)?@"true":@"false"];
		[s appendFormat: @"<MoveHistoricData>%@</MoveHistoricData>", (self.MoveHistoricData)?@"true":@"false"];
		[s appendFormat: @"<UseLastEmployeeForm>%@</UseLastEmployeeForm>", (self.UseLastEmployeeForm)?@"true":@"false"];
		[s appendFormat: @"<MaintainWholesalerCodes>%@</MaintainWholesalerCodes>", (self.MaintainWholesalerCodes)?@"true":@"false"];
		[s appendFormat: @"<ShowF6inOrderEntry>%@</ShowF6inOrderEntry>", (self.ShowF6inOrderEntry)?@"true":@"false"];
		[s appendFormat: @"<OrderPadFromDiary>%@</OrderPadFromDiary>", (self.OrderPadFromDiary)?@"true":@"false"];
		[s appendFormat: @"<NetSalesFormula>%@</NetSalesFormula>", [NSString stringWithFormat: @"%i", self.NetSalesFormula]];
		[s appendFormat: @"<TargetVolumeIncludesBonus>%@</TargetVolumeIncludesBonus>", (self.TargetVolumeIncludesBonus)?@"true":@"false"];
		[s appendFormat: @"<TargetEstimatesInUse>%@</TargetEstimatesInUse>", (self.TargetEstimatesInUse)?@"true":@"false"];
		[s appendFormat: @"<TargetOnDeliveryDates>%@</TargetOnDeliveryDates>", (self.TargetOnDeliveryDates)?@"true":@"false"];
		[s appendFormat: @"<PointSystemInUse>%@</PointSystemInUse>", (self.PointSystemInUse)?@"true":@"false"];
		[s appendFormat: @"<WebEnabled>%@</WebEnabled>", (self.WebEnabled)?@"true":@"false"];
		[s appendFormat: @"<BlockBonusOnly>%@</BlockBonusOnly>", (self.BlockBonusOnly)?@"true":@"false"];
		[s appendFormat: @"<WeekendDay>%@</WeekendDay>", [NSString stringWithFormat: @"%i", self.WeekendDay]];
		[s appendFormat: @"<SummaryDataAvailable>%@</SummaryDataAvailable>", (self.SummaryDataAvailable)?@"true":@"false"];
		[s appendFormat: @"<AllowSplitPacks>%@</AllowSplitPacks>", (self.AllowSplitPacks)?@"true":@"false"];
		[s appendFormat: @"<SplitDeliveryDates>%@</SplitDeliveryDates>", (self.SplitDeliveryDates)?@"true":@"false"];
		[s appendFormat: @"<UseNetRevenue>%@</UseNetRevenue>", (self.UseNetRevenue)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosConfig class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.ClientHomePage = nil;
		self.DefaultDataSource = nil;
		self.DefaultTargetType = nil;
		self.MinimumOrderValue = nil;
		self.StrataHomePage = nil;
		self.StandardLocationCode = nil;
		self.StandardProductCode = nil;
		self.DefaultCustomerView = nil;
		self.F3Template = nil;
		[super dealloc];
	}

@end
