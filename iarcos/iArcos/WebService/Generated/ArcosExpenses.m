/*
	ArcosExpenses.h
	The implementation of properties and methods for the ArcosExpenses object.
	Generated by SudzC.com
*/
#import "ArcosExpenses.h"

@implementation ArcosExpenses
	@synthesize IUR = _IUR;
	@synthesize EXiur = _EXiur;
	@synthesize EmployeeIUR = _EmployeeIUR;
	@synthesize LocationIUR = _LocationIUR;
	@synthesize ContactIUR = _ContactIUR;
	@synthesize MeetingIUR = _MeetingIUR;
	@synthesize ApprovedByIUR = _ApprovedByIUR;
	@synthesize ExpDate = _ExpDate;
	@synthesize TotalAmount = _TotalAmount;
	@synthesize VatAmount = _VatAmount;
	@synthesize Reciepted = _Reciepted;
	@synthesize Reimbursed = _Reimbursed;
	@synthesize Comments = _Comments;
	@synthesize ChequeNumber = _ChequeNumber;

	- (id) init
	{
		if(self = [super init])
		{
			self.ExpDate = nil;
			self.Comments = nil;

		}
		return self;
	}

	+ (ArcosExpenses*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.IUR = [[Soap getNodeValue: node withName: @"IUR"] intValue];
			self.EXiur = [[Soap getNodeValue: node withName: @"EXiur"] intValue];
			self.EmployeeIUR = [[Soap getNodeValue: node withName: @"EmployeeIUR"] intValue];
			self.LocationIUR = [[Soap getNodeValue: node withName: @"LocationIUR"] intValue];
			self.ContactIUR = [[Soap getNodeValue: node withName: @"ContactIUR"] intValue];
			self.MeetingIUR = [[Soap getNodeValue: node withName: @"MeetingIUR"] intValue];
			self.ApprovedByIUR = [[Soap getNodeValue: node withName: @"ApprovedByIUR"] intValue];
			self.ExpDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"ExpDate"]];
			self.TotalAmount = [[Soap getNodeValue: node withName: @"TotalAmount"] doubleValue];
			self.VatAmount = [[Soap getNodeValue: node withName: @"VatAmount"] doubleValue];
			self.Reciepted = [[Soap getNodeValue: node withName: @"Reciepted"] boolValue];
			self.Reimbursed = [[Soap getNodeValue: node withName: @"Reimbursed"] boolValue];
			self.Comments = [Soap getNodeValue: node withName: @"Comments"];
			self.ChequeNumber = [[Soap getNodeValue: node withName: @"ChequeNumber"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Expenses"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<IUR>%@</IUR>", [NSString stringWithFormat: @"%i", self.IUR]];
		[s appendFormat: @"<EXiur>%@</EXiur>", [NSString stringWithFormat: @"%i", self.EXiur]];
		[s appendFormat: @"<EmployeeIUR>%@</EmployeeIUR>", [NSString stringWithFormat: @"%i", self.EmployeeIUR]];
		[s appendFormat: @"<LocationIUR>%@</LocationIUR>", [NSString stringWithFormat: @"%i", self.LocationIUR]];
		[s appendFormat: @"<ContactIUR>%@</ContactIUR>", [NSString stringWithFormat: @"%i", self.ContactIUR]];
		[s appendFormat: @"<MeetingIUR>%@</MeetingIUR>", [NSString stringWithFormat: @"%i", self.MeetingIUR]];
		[s appendFormat: @"<ApprovedByIUR>%@</ApprovedByIUR>", [NSString stringWithFormat: @"%i", self.ApprovedByIUR]];
		if (self.ExpDate != nil) [s appendFormat: @"<ExpDate>%@</ExpDate>", [Soap getDateString: self.ExpDate]];
		[s appendFormat: @"<TotalAmount>%@</TotalAmount>", [NSString stringWithFormat: @"%f", self.TotalAmount]];
		[s appendFormat: @"<VatAmount>%@</VatAmount>", [NSString stringWithFormat: @"%f", self.VatAmount]];
		[s appendFormat: @"<Reciepted>%@</Reciepted>", (self.Reciepted)?@"true":@"false"];
		[s appendFormat: @"<Reimbursed>%@</Reimbursed>", (self.Reimbursed)?@"true":@"false"];
		if (self.Comments != nil) [s appendFormat: @"<Comments>%@</Comments>", [[self.Comments stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<ChequeNumber>%@</ChequeNumber>", [NSString stringWithFormat: @"%i", self.ChequeNumber]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosExpenses class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.ExpDate = nil;
		self.Comments = nil;
		[super dealloc];
	}

@end
