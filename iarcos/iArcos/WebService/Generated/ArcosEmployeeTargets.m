/*
	ArcosEmployeeTargets.h
	The implementation of properties and methods for the ArcosEmployeeTargets object.
	Generated by SudzC.com
*/
#import "ArcosEmployeeTargets.h"

#import "ArcosArrayOfInt.h"
#import "ArcosArrayOfInt.h"
#import "ArcosArrayOfTargetDetail.h"
@implementation ArcosEmployeeTargets
	@synthesize Description = _Description;
	@synthesize Title = _Title;
	@synthesize Actuals = _Actuals;
	@synthesize Targets = _Targets;
	@synthesize TargetDetails = _TargetDetails;
	@synthesize YtdActual = _YtdActual;
	@synthesize ytdTarget = _ytdTarget;
	@synthesize TargetFieldUsed = _TargetFieldUsed;
	@synthesize CurrentPeriod = _CurrentPeriod;
	@synthesize CurrentActual = _CurrentActual;
	@synthesize CurrentTarget = _CurrentTarget;
	@synthesize NumberOfItems = _NumberOfItems;
	@synthesize StartDate = _StartDate;
	@synthesize EndDate = _EndDate;
	@synthesize WorkDays = _WorkDays;
	@synthesize DaysGone = _DaysGone;

	- (id) init
	{
		if(self = [super init])
		{
			self.Description = nil;
			self.Title = nil;
			self.Actuals = [[[NSMutableArray alloc] init] autorelease];
			self.Targets = [[[NSMutableArray alloc] init] autorelease];
			self.TargetDetails = [[[NSMutableArray alloc] init] autorelease];
			self.TargetFieldUsed = nil;
			self.StartDate = nil;
			self.EndDate = nil;

		}
		return self;
	}

	+ (ArcosEmployeeTargets*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Description = [Soap getNodeValue: node withName: @"Description"];
			self.Title = [Soap getNodeValue: node withName: @"Title"];
			self.Actuals = [[ArcosArrayOfInt createWithNode: [Soap getNode: node withName: @"Actuals"]] object];
			self.Targets = [[ArcosArrayOfInt createWithNode: [Soap getNode: node withName: @"Targets"]] object];
			self.TargetDetails = [[ArcosArrayOfTargetDetail createWithNode: [Soap getNode: node withName: @"TargetDetails"]] object];
			self.YtdActual = [[Soap getNodeValue: node withName: @"YtdActual"] intValue];
			self.ytdTarget = [[Soap getNodeValue: node withName: @"ytdTarget"] intValue];
			self.TargetFieldUsed = [Soap getNodeValue: node withName: @"TargetFieldUsed"];
			self.CurrentPeriod = [[Soap getNodeValue: node withName: @"CurrentPeriod"] intValue];
			self.CurrentActual = [[Soap getNodeValue: node withName: @"CurrentActual"] intValue];
			self.CurrentTarget = [[Soap getNodeValue: node withName: @"CurrentTarget"] intValue];
			self.NumberOfItems = [[Soap getNodeValue: node withName: @"NumberOfItems"] intValue];
			self.StartDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"StartDate"]];
			self.EndDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"EndDate"]];
			self.WorkDays = [[Soap getNodeValue: node withName: @"WorkDays"] intValue];
			self.DaysGone = [[Soap getNodeValue: node withName: @"DaysGone"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"EmployeeTargets"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Description != nil) [s appendFormat: @"<Description>%@</Description>", [[self.Description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Title != nil) [s appendFormat: @"<Title>%@</Title>", [[self.Title stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Actuals != nil && self.Actuals.count > 0) {
			[s appendFormat: @"<Actuals>%@</Actuals>", [ArcosArrayOfInt serialize: self.Actuals]];
		} else {
			[s appendString: @"<Actuals/>"];
		}
		if (self.Targets != nil && self.Targets.count > 0) {
			[s appendFormat: @"<Targets>%@</Targets>", [ArcosArrayOfInt serialize: self.Targets]];
		} else {
			[s appendString: @"<Targets/>"];
		}
		if (self.TargetDetails != nil && self.TargetDetails.count > 0) {
			[s appendFormat: @"<TargetDetails>%@</TargetDetails>", [ArcosArrayOfTargetDetail serialize: self.TargetDetails]];
		} else {
			[s appendString: @"<TargetDetails/>"];
		}
		[s appendFormat: @"<YtdActual>%@</YtdActual>", [NSString stringWithFormat: @"%i", self.YtdActual]];
		[s appendFormat: @"<ytdTarget>%@</ytdTarget>", [NSString stringWithFormat: @"%i", self.ytdTarget]];
		if (self.TargetFieldUsed != nil) [s appendFormat: @"<TargetFieldUsed>%@</TargetFieldUsed>", [[self.TargetFieldUsed stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<CurrentPeriod>%@</CurrentPeriod>", [NSString stringWithFormat: @"%i", self.CurrentPeriod]];
		[s appendFormat: @"<CurrentActual>%@</CurrentActual>", [NSString stringWithFormat: @"%i", self.CurrentActual]];
		[s appendFormat: @"<CurrentTarget>%@</CurrentTarget>", [NSString stringWithFormat: @"%i", self.CurrentTarget]];
		[s appendFormat: @"<NumberOfItems>%@</NumberOfItems>", [NSString stringWithFormat: @"%i", self.NumberOfItems]];
		if (self.StartDate != nil) [s appendFormat: @"<StartDate>%@</StartDate>", [Soap getDateString: self.StartDate]];
		if (self.EndDate != nil) [s appendFormat: @"<EndDate>%@</EndDate>", [Soap getDateString: self.EndDate]];
		[s appendFormat: @"<WorkDays>%@</WorkDays>", [NSString stringWithFormat: @"%i", self.WorkDays]];
		[s appendFormat: @"<DaysGone>%@</DaysGone>", [NSString stringWithFormat: @"%i", self.DaysGone]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosEmployeeTargets class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.Description = nil;
		self.Title = nil;
		self.Actuals = nil;
		self.Targets = nil;
		self.TargetDetails = nil;
		self.TargetFieldUsed = nil;
		self.StartDate = nil;
		self.EndDate = nil;
		[super dealloc];
	}

@end
