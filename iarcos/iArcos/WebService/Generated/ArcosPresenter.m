/*
	ArcosPresenter.h
	The implementation of properties and methods for the ArcosPresenter object.
	Generated by SudzC.com
*/
#import "ArcosPresenter.h"

@implementation ArcosPresenter
	@synthesize Active = _Active;
	@synthesize DisplaySequence = _DisplaySequence;
	@synthesize EmployeeIUR = _EmployeeIUR;
	@synthesize FileTypeIUR = _FileTypeIUR;
	@synthesize ImageIUR = _ImageIUR;
	@synthesize IUR = _IUR;
	@synthesize L1code = _L1code;
	@synthesize L2code = _L2code;
	@synthesize L3code = _L3code;
	@synthesize L4code = _L4code;
	@synthesize L5code = _L5code;
	@synthesize LocationIUR = _LocationIUR;
	@synthesize MemoDetails = _MemoDetails;
	@synthesize Name = _Name;
	@synthesize ParentIUR = _ParentIUR;
	@synthesize ProductIUR = _ProductIUR;
	@synthesize URL = _URL;
	@synthesize Title = _Title;
	@synthesize FullTitle = _FullTitle;
	@synthesize OnPromotion = _OnPromotion;
	@synthesize FormIUR = _FormIUR;
	@synthesize OrderLevel = _OrderLevel;
	@synthesize MinimumSeconds = _MinimumSeconds;

	- (id) init
	{
		if(self = [super init])
		{
			self.L1code = nil;
			self.L2code = nil;
			self.L3code = nil;
			self.L4code = nil;
			self.L5code = nil;
			self.MemoDetails = nil;
			self.Name = nil;
			self.URL = nil;
			self.Title = nil;
			self.FullTitle = nil;

		}
		return self;
	}

	+ (ArcosPresenter*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Active = [[Soap getNodeValue: node withName: @"Active"] boolValue];
			self.DisplaySequence = [[Soap getNodeValue: node withName: @"DisplaySequence"] intValue];
			self.EmployeeIUR = [[Soap getNodeValue: node withName: @"EmployeeIUR"] intValue];
			self.FileTypeIUR = [[Soap getNodeValue: node withName: @"FileTypeIUR"] intValue];
			self.ImageIUR = [[Soap getNodeValue: node withName: @"ImageIUR"] intValue];
			self.IUR = [[Soap getNodeValue: node withName: @"IUR"] intValue];
			self.L1code = [Soap getNodeValue: node withName: @"L1code"];
			self.L2code = [Soap getNodeValue: node withName: @"L2code"];
			self.L3code = [Soap getNodeValue: node withName: @"L3code"];
			self.L4code = [Soap getNodeValue: node withName: @"L4code"];
			self.L5code = [Soap getNodeValue: node withName: @"L5code"];
			self.LocationIUR = [[Soap getNodeValue: node withName: @"LocationIUR"] intValue];
			self.MemoDetails = [Soap getNodeValue: node withName: @"MemoDetails"];
			self.Name = [Soap getNodeValue: node withName: @"Name"];
			self.ParentIUR = [[Soap getNodeValue: node withName: @"ParentIUR"] intValue];
			self.ProductIUR = [[Soap getNodeValue: node withName: @"ProductIUR"] intValue];
			self.URL = [Soap getNodeValue: node withName: @"URL"];
			self.Title = [Soap getNodeValue: node withName: @"Title"];
			self.FullTitle = [Soap getNodeValue: node withName: @"FullTitle"];
			self.OnPromotion = [[Soap getNodeValue: node withName: @"OnPromotion"] boolValue];
			self.FormIUR = [[Soap getNodeValue: node withName: @"FormIUR"] intValue];
			self.OrderLevel = [[Soap getNodeValue: node withName: @"OrderLevel"] intValue];
			self.MinimumSeconds = [[Soap getNodeValue: node withName: @"MinimumSeconds"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Presenter"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<Active>%@</Active>", (self.Active)?@"true":@"false"];
		[s appendFormat: @"<DisplaySequence>%@</DisplaySequence>", [NSString stringWithFormat: @"%i", self.DisplaySequence]];
		[s appendFormat: @"<EmployeeIUR>%@</EmployeeIUR>", [NSString stringWithFormat: @"%i", self.EmployeeIUR]];
		[s appendFormat: @"<FileTypeIUR>%@</FileTypeIUR>", [NSString stringWithFormat: @"%i", self.FileTypeIUR]];
		[s appendFormat: @"<ImageIUR>%@</ImageIUR>", [NSString stringWithFormat: @"%i", self.ImageIUR]];
		[s appendFormat: @"<IUR>%@</IUR>", [NSString stringWithFormat: @"%i", self.IUR]];
		if (self.L1code != nil) [s appendFormat: @"<L1code>%@</L1code>", [[self.L1code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.L2code != nil) [s appendFormat: @"<L2code>%@</L2code>", [[self.L2code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.L3code != nil) [s appendFormat: @"<L3code>%@</L3code>", [[self.L3code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.L4code != nil) [s appendFormat: @"<L4code>%@</L4code>", [[self.L4code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.L5code != nil) [s appendFormat: @"<L5code>%@</L5code>", [[self.L5code stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<LocationIUR>%@</LocationIUR>", [NSString stringWithFormat: @"%i", self.LocationIUR]];
		if (self.MemoDetails != nil) [s appendFormat: @"<MemoDetails>%@</MemoDetails>", [[self.MemoDetails stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Name != nil) [s appendFormat: @"<Name>%@</Name>", [[self.Name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<ParentIUR>%@</ParentIUR>", [NSString stringWithFormat: @"%i", self.ParentIUR]];
		[s appendFormat: @"<ProductIUR>%@</ProductIUR>", [NSString stringWithFormat: @"%i", self.ProductIUR]];
		if (self.URL != nil) [s appendFormat: @"<URL>%@</URL>", [[self.URL stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Title != nil) [s appendFormat: @"<Title>%@</Title>", [[self.Title stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.FullTitle != nil) [s appendFormat: @"<FullTitle>%@</FullTitle>", [[self.FullTitle stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<OnPromotion>%@</OnPromotion>", (self.OnPromotion)?@"true":@"false"];
		[s appendFormat: @"<FormIUR>%@</FormIUR>", [NSString stringWithFormat: @"%i", self.FormIUR]];
		[s appendFormat: @"<OrderLevel>%@</OrderLevel>", [NSString stringWithFormat: @"%i", self.OrderLevel]];
		[s appendFormat: @"<MinimumSeconds>%@</MinimumSeconds>", [NSString stringWithFormat: @"%i", self.MinimumSeconds]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosPresenter class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.L1code = nil;
		self.L2code = nil;
		self.L3code = nil;
		self.L4code = nil;
		self.L5code = nil;
		self.MemoDetails = nil;
		self.Name = nil;
		self.URL = nil;
		self.Title = nil;
		self.FullTitle = nil;
		[super dealloc];
	}

@end
