/*
	ArcosCallTran.h
	The implementation of properties and methods for the ArcosCallTran object.
	Generated by SudzC.com
*/
#import "ArcosCallTran.h"

@implementation ArcosCallTran
	@synthesize iur = _iur;
	@synthesize CallIUR = _CallIUR;
	@synthesize DetailIUR = _DetailIUR;
	@synthesize DetailLevel = _DetailLevel;
	@synthesize ProductIUR = _ProductIUR;
	@synthesize EmployeeIUR = _EmployeeIUR;
	@synthesize DTIUR = _DTIUR;
	@synthesize FullFilled = _FullFilled;
	@synthesize CallDate = _CallDate;
	@synthesize Score = _Score;
	@synthesize Reference = _Reference;

	- (id) init
	{
		if(self = [super init])
		{
			self.DetailLevel = nil;
			self.CallDate = nil;
			self.Reference = nil;

		}
		return self;
	}

	+ (ArcosCallTran*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.iur = [[Soap getNodeValue: node withName: @"iur"] intValue];
			self.CallIUR = [[Soap getNodeValue: node withName: @"CallIUR"] intValue];
			self.DetailIUR = [[Soap getNodeValue: node withName: @"DetailIUR"] intValue];
			self.DetailLevel = [Soap getNodeValue: node withName: @"DetailLevel"];
			self.ProductIUR = [[Soap getNodeValue: node withName: @"ProductIUR"] intValue];
			self.EmployeeIUR = [[Soap getNodeValue: node withName: @"EmployeeIUR"] intValue];
			self.DTIUR = [[Soap getNodeValue: node withName: @"DTIUR"] intValue];
			self.FullFilled = [[Soap getNodeValue: node withName: @"FullFilled"] boolValue];
			self.CallDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"CallDate"]];
			self.Score = [[Soap getNodeValue: node withName: @"Score"] intValue];
			self.Reference = [Soap getNodeValue: node withName: @"Reference"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"CallTran"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<iur>%@</iur>", [NSString stringWithFormat: @"%i", self.iur]];
		[s appendFormat: @"<CallIUR>%@</CallIUR>", [NSString stringWithFormat: @"%i", self.CallIUR]];
		[s appendFormat: @"<DetailIUR>%@</DetailIUR>", [NSString stringWithFormat: @"%i", self.DetailIUR]];
		if (self.DetailLevel != nil) [s appendFormat: @"<DetailLevel>%@</DetailLevel>", [[self.DetailLevel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<ProductIUR>%@</ProductIUR>", [NSString stringWithFormat: @"%i", self.ProductIUR]];
		[s appendFormat: @"<EmployeeIUR>%@</EmployeeIUR>", [NSString stringWithFormat: @"%i", self.EmployeeIUR]];
		[s appendFormat: @"<DTIUR>%@</DTIUR>", [NSString stringWithFormat: @"%i", self.DTIUR]];
		[s appendFormat: @"<FullFilled>%@</FullFilled>", (self.FullFilled)?@"true":@"false"];
		if (self.CallDate != nil) [s appendFormat: @"<CallDate>%@</CallDate>", [Soap getDateString: self.CallDate]];
		[s appendFormat: @"<Score>%@</Score>", [NSString stringWithFormat: @"%i", self.Score]];
		if (self.Reference != nil) [s appendFormat: @"<Reference>%@</Reference>", [[self.Reference stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosCallTran class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.DetailLevel = nil;
		self.CallDate = nil;
		self.Reference = nil;
		[super dealloc];
	}

@end
