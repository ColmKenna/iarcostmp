/*
	ArcosPresenterForMeeting.h
	The implementation of properties and methods for the ArcosPresenterForMeeting object.
	Generated by SudzC.com
*/
#import "ArcosPresenterForMeeting.h"

@implementation ArcosPresenterForMeeting
	@synthesize Shown = _Shown;
	@synthesize IUR = _IUR;
	@synthesize Title = _Title;
	@synthesize Active = _Active;
	@synthesize ImageIUR = _ImageIUR;
	@synthesize MemoDetails = _MemoDetails;

	- (id) init
	{
		if(self = [super init])
		{
			self.Title = nil;
			self.MemoDetails = nil;

		}
		return self;
	}

	+ (ArcosPresenterForMeeting*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Shown = [[Soap getNodeValue: node withName: @"Shown"] boolValue];
			self.IUR = [[Soap getNodeValue: node withName: @"IUR"] intValue];
			self.Title = [Soap getNodeValue: node withName: @"Title"];
			self.Active = [[Soap getNodeValue: node withName: @"Active"] boolValue];
			self.ImageIUR = [[Soap getNodeValue: node withName: @"ImageIUR"] intValue];
			self.MemoDetails = [Soap getNodeValue: node withName: @"MemoDetails"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"PresenterForMeeting"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<Shown>%@</Shown>", (self.Shown)?@"true":@"false"];
		[s appendFormat: @"<IUR>%@</IUR>", [NSString stringWithFormat: @"%i", self.IUR]];
		if (self.Title != nil) [s appendFormat: @"<Title>%@</Title>", [[self.Title stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<Active>%@</Active>", (self.Active)?@"true":@"false"];
		[s appendFormat: @"<ImageIUR>%@</ImageIUR>", [NSString stringWithFormat: @"%i", self.ImageIUR]];
		if (self.MemoDetails != nil) [s appendFormat: @"<MemoDetails>%@</MemoDetails>", [[self.MemoDetails stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosPresenterForMeeting class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.Title = nil;
		self.MemoDetails = nil;
		[super dealloc];
	}

@end
