/*
	ArcosFormDetailBO.h
	The implementation of properties and methods for the ArcosFormDetailBO object.
	Generated by SudzC.com
*/
#import "ArcosFormDetailBO.h"

@implementation ArcosFormDetailBO
	@synthesize iur = _iur;
	@synthesize Active = _Active;
	@synthesize ShowSeperators = _ShowSeperators;
	@synthesize FontName = _FontName;
	@synthesize FontSize = _FontSize;
	@synthesize Details = _Details;
	@synthesize WholeSalerList = _WholeSalerList;
	@synthesize DisplayYield = _DisplayYield;
	@synthesize SplitList = _SplitList;
	@synthesize DisplayImage = _DisplayImage;
	@synthesize DisplayHistoric = _DisplayHistoric;
	@synthesize AskOrderType = _AskOrderType;
	@synthesize AskRepresentative = _AskRepresentative;
	@synthesize LTList = _LTList;
	@synthesize PrintDeliveryDocket = _PrintDeliveryDocket;
	@synthesize ShowExpanded = _ShowExpanded;
	@synthesize FormType = _FormType;
	@synthesize NumberOfSplits = _NumberOfSplits;
	@synthesize ForeColor = _ForeColor;
	@synthesize BackColor = _BackColor;
	@synthesize AllowDefaults = _AllowDefaults;
	@synthesize DividerForeColor = _DividerForeColor;
	@synthesize DividerBackColor = _DividerBackColor;
	@synthesize DefaultDeliveryDate = _DefaultDeliveryDate;
	@synthesize DiscountDeal = _DiscountDeal;
	@synthesize Type = _Type;
	@synthesize DefaultDeliverDate = _DefaultDeliverDate;
	@synthesize Imageiur = _Imageiur;

	- (id) init
	{
		if(self = [super init])
		{
			self.FontName = nil;
			self.Details = nil;
			self.WholeSalerList = nil;
			self.SplitList = nil;
			self.LTList = nil;
			self.DefaultDeliveryDate = nil;
			self.DiscountDeal = nil;
			self.Type = nil;
			self.DefaultDeliverDate = nil;

		}
		return self;
	}

	+ (ArcosFormDetailBO*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.iur = [[Soap getNodeValue: node withName: @"iur"] intValue];
			self.Active = [[Soap getNodeValue: node withName: @"Active"] boolValue];
			self.ShowSeperators = [[Soap getNodeValue: node withName: @"ShowSeperators"] boolValue];
			self.FontName = [Soap getNodeValue: node withName: @"FontName"];
			self.FontSize = [[Soap getNodeValue: node withName: @"FontSize"] intValue];
			self.Details = [Soap getNodeValue: node withName: @"Details"];
			self.WholeSalerList = [Soap getNodeValue: node withName: @"WholeSalerList"];
			self.DisplayYield = [[Soap getNodeValue: node withName: @"DisplayYield"] boolValue];
			self.SplitList = [Soap getNodeValue: node withName: @"SplitList"];
			self.DisplayImage = [[Soap getNodeValue: node withName: @"DisplayImage"] boolValue];
			self.DisplayHistoric = [[Soap getNodeValue: node withName: @"DisplayHistoric"] boolValue];
			self.AskOrderType = [[Soap getNodeValue: node withName: @"AskOrderType"] boolValue];
			self.AskRepresentative = [[Soap getNodeValue: node withName: @"AskRepresentative"] boolValue];
			self.LTList = [Soap getNodeValue: node withName: @"LTList"];
			self.PrintDeliveryDocket = [[Soap getNodeValue: node withName: @"PrintDeliveryDocket"] boolValue];
			self.ShowExpanded = [[Soap getNodeValue: node withName: @"ShowExpanded"] boolValue];
			self.FormType = [[Soap getNodeValue: node withName: @"FormType"] intValue];
			self.NumberOfSplits = [[Soap getNodeValue: node withName: @"NumberOfSplits"] intValue];
			self.ForeColor = [[Soap getNodeValue: node withName: @"ForeColor"] doubleValue];
			self.BackColor = [[Soap getNodeValue: node withName: @"BackColor"] doubleValue];
			self.AllowDefaults = [[Soap getNodeValue: node withName: @"AllowDefaults"] boolValue];
			self.DividerForeColor = [[Soap getNodeValue: node withName: @"DividerForeColor"] doubleValue];
			self.DividerBackColor = [[Soap getNodeValue: node withName: @"DividerBackColor"] doubleValue];
			self.DefaultDeliveryDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"DefaultDeliveryDate"]];
			self.DiscountDeal = [Soap getNodeValue: node withName: @"DiscountDeal"];
			self.Type = [Soap getNodeValue: node withName: @"Type"];
			self.DefaultDeliverDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"DefaultDeliverDate"]];
			self.Imageiur = [[Soap getNodeValue: node withName: @"Imageiur"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"FormDetailBO"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<iur>%@</iur>", [NSString stringWithFormat: @"%i", self.iur]];
		[s appendFormat: @"<Active>%@</Active>", (self.Active)?@"true":@"false"];
		[s appendFormat: @"<ShowSeperators>%@</ShowSeperators>", (self.ShowSeperators)?@"true":@"false"];
		if (self.FontName != nil) [s appendFormat: @"<FontName>%@</FontName>", [[self.FontName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<FontSize>%@</FontSize>", [NSString stringWithFormat: @"%i", self.FontSize]];
		if (self.Details != nil) [s appendFormat: @"<Details>%@</Details>", [[self.Details stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.WholeSalerList != nil) [s appendFormat: @"<WholeSalerList>%@</WholeSalerList>", [[self.WholeSalerList stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DisplayYield>%@</DisplayYield>", (self.DisplayYield)?@"true":@"false"];
		if (self.SplitList != nil) [s appendFormat: @"<SplitList>%@</SplitList>", [[self.SplitList stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<DisplayImage>%@</DisplayImage>", (self.DisplayImage)?@"true":@"false"];
		[s appendFormat: @"<DisplayHistoric>%@</DisplayHistoric>", (self.DisplayHistoric)?@"true":@"false"];
		[s appendFormat: @"<AskOrderType>%@</AskOrderType>", (self.AskOrderType)?@"true":@"false"];
		[s appendFormat: @"<AskRepresentative>%@</AskRepresentative>", (self.AskRepresentative)?@"true":@"false"];
		if (self.LTList != nil) [s appendFormat: @"<LTList>%@</LTList>", [[self.LTList stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<PrintDeliveryDocket>%@</PrintDeliveryDocket>", (self.PrintDeliveryDocket)?@"true":@"false"];
		[s appendFormat: @"<ShowExpanded>%@</ShowExpanded>", (self.ShowExpanded)?@"true":@"false"];
		[s appendFormat: @"<FormType>%@</FormType>", [NSString stringWithFormat: @"%i", self.FormType]];
		[s appendFormat: @"<NumberOfSplits>%@</NumberOfSplits>", [NSString stringWithFormat: @"%i", self.NumberOfSplits]];
		[s appendFormat: @"<ForeColor>%@</ForeColor>", [NSString stringWithFormat: @"%f", self.ForeColor]];
		[s appendFormat: @"<BackColor>%@</BackColor>", [NSString stringWithFormat: @"%f", self.BackColor]];
		[s appendFormat: @"<AllowDefaults>%@</AllowDefaults>", (self.AllowDefaults)?@"true":@"false"];
		[s appendFormat: @"<DividerForeColor>%@</DividerForeColor>", [NSString stringWithFormat: @"%f", self.DividerForeColor]];
		[s appendFormat: @"<DividerBackColor>%@</DividerBackColor>", [NSString stringWithFormat: @"%f", self.DividerBackColor]];
		if (self.DefaultDeliveryDate != nil) [s appendFormat: @"<DefaultDeliveryDate>%@</DefaultDeliveryDate>", [Soap getDateString: self.DefaultDeliveryDate]];
		if (self.DiscountDeal != nil) [s appendFormat: @"<DiscountDeal>%@</DiscountDeal>", [[self.DiscountDeal stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Type != nil) [s appendFormat: @"<Type>%@</Type>", [[self.Type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DefaultDeliverDate != nil) [s appendFormat: @"<DefaultDeliverDate>%@</DefaultDeliverDate>", [Soap getDateString: self.DefaultDeliverDate]];
		[s appendFormat: @"<Imageiur>%@</Imageiur>", [NSString stringWithFormat: @"%i", self.Imageiur]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ArcosFormDetailBO class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.FontName = nil;
		self.Details = nil;
		self.WholeSalerList = nil;
		self.SplitList = nil;
		self.LTList = nil;
		self.DefaultDeliveryDate = nil;
		self.DiscountDeal = nil;
		self.Type = nil;
		self.DefaultDeliverDate = nil;
		[super dealloc];
	}

@end
